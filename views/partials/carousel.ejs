<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Carousel Example</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
      }

      .carousel-container {
        position: relative;
        width: 100%;
        max-width: 800px;
        margin: 0 auto;
        overflow: hidden;
      }

      .carousel-slides {
        display: flex;
        align-items: center;
        transition: transform 0.5s ease-in-out;
      }

      .carousel-item {
        position: absolute; /* Required for z-index to take effect */
        min-width: 100%;
        box-sizing: border-box;
        transition: opacity 0.5s ease-in-out, z-index 0s linear 0.5s; /* Fade effect */
        opacity: 0;
        z-index: 0;
      }

      .carousel-item.active {
        opacity: 1;
        z-index: 10;
        position: relative;
      }

      .carousel-item img {
        width: 100%;
        display: block;
      }

      .carousel-caption {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        margin-bottom: 10px;
      }

      .carousel-indicators {
        position: absolute;
        bottom: 10px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 5px;
        z-index: 20;
      }

      .indicator {
        width: 10px;
        height: 10px;
        background: lightgray;
        border-radius: 50%;
        cursor: pointer;
      }

      .indicator.active {
        background: gray;
      }

      .carousel-control {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        font-size: 18px;
        padding: 10px;
        cursor: pointer;
        z-index: 20;
      }

      .carousel-control.left {
        left: 10px;
      }

      .carousel-control.right {
        right: 10px;
      }
    </style>
  </head>
  <body>
    <div class="carousel-container">
      <!-- Wrapper for slides -->
      <div class="carousel-slides">
        <% let validMedia = []; %> <!-- Array to track valid media -->

        <% data.forEach(post => { %>
          <% let firstMediaProcessed = false; %> <!-- Control flag -->
          <% post.media.forEach(media => { %> 
            <% if (firstMediaProcessed) return; %> <!-- Simulate break -->
            <% if (media) { %>
              <% const extension = media.split('.').pop().toLowerCase(); %> 
              <% if (['mp4', 'webm', 'ogg', 'png', 'jpg', 'jpeg', 'webp'].includes(extension)) { %>
                <% validMedia.push(media); %> <!-- Add valid media to array -->
                <div class="carousel-item">
                  <a href="/post/<%= post._id %>">
                    <% if (['mp4', 'webm', 'ogg'].includes(extension)) { %>
                      <video width="100%" height="100%" style="border-radius: 8px" controls autoplay muted>
                        <source src="<%= media %>" type="video/<%= extension %>" />
                        Your browser does not support the video tag.
                      </video>
                    <% } else { %>
                      <img src="<%= media %>" class="hero-image" alt="Media" width="981" height="528" />
                    <% } %>
                    <div class="carousel-caption">
                      <%= post.title %>
                    </div>
                  </a>
                </div>
                <% firstMediaProcessed = true; %> <!-- Set flag to true -->
              <% } %>
            <% } %>
          <% }) %> 
        <% }) %>
      </div>

      <!-- Indicators -->
      <div class="carousel-indicators">
        <% validMedia.forEach((_, index) => { %>
          <div class="indicator <%= index === 0 ? 'active' : '' %>" data-slide="<%= index %>"></div>
        <% }) %>
      </div>

      <!-- Left and right controls -->
      <button class="carousel-control left">&lt;</button>
      <button class="carousel-control right">&gt;</button>
    </div>

    <script>
      const slides = document.querySelectorAll(".carousel-item");
      const indicators = document.querySelectorAll(".indicator");
      const prevButton = document.querySelector(".carousel-control.left");
      const nextButton = document.querySelector(".carousel-control.right");

      let currentIndex = 0;
      let autoSlideInterval;

      // Function to update the carousel with fade effect
      function updateCarousel(index) {
        slides.forEach((slide, i) => {
          const isActive = i === index;
          slide.classList.toggle("active", isActive); // Show the active slide
          slide.style.zIndex = isActive ? "10" : "0"; // Set z-index for active and non-active slides
        });

        // Update active indicator
        indicators.forEach((indicator, i) => {
          indicator.classList.toggle("active", i === index);
        });
      }

      // Navigate to the next slide
      function nextSlide() {
        currentIndex = (currentIndex + 1) % slides.length;
        updateCarousel(currentIndex);
      }

      // Navigate to the previous slide
      function prevSlide() {
        currentIndex = (currentIndex - 1 + slides.length) % slides.length;
        updateCarousel(currentIndex);
      }

      // Handle indicator click
      indicators.forEach((indicator, index) => {
        indicator.addEventListener("click", () => {
          currentIndex = index;
          updateCarousel(currentIndex);
          resetAutoSlide(); // Reset auto-slide when clicked
        });
      });

      // Start the auto-slide functionality
      function startAutoSlide() {
        autoSlideInterval = setInterval(nextSlide, 2000);
      }

      // Reset auto-slide timer
      function resetAutoSlide() {
        clearInterval(autoSlideInterval);
        startAutoSlide();
      }

      // Attach event listeners to buttons
      nextButton.addEventListener("click", () => {
        nextSlide();
        resetAutoSlide(); // Reset auto-slide when clicked
      });

      prevButton.addEventListener("click", () => {
        prevSlide();
        resetAutoSlide(); // Reset auto-slide when clicked
      });

      // Initialize the carousel
      updateCarousel(currentIndex);
      startAutoSlide(); // Start auto-slide when the page loads
    </script>
  </body>
</html>
